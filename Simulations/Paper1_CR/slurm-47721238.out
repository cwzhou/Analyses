── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.3.6     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.2.1
✔ purrr     0.3.5     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors

Attaching package: ‘dtrSurv’

The following object is masked from ‘package:ggplot2’:

    stage


Attaching package: ‘MASS’

The following object is masked from ‘package:dplyr’:

    select


Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

##  rgenoud (Version 5.9-0.3, Build Date: 2022-04-19)
##  See http://sekhon.berkeley.edu/rgenoud for additional documentation.
##  Please cite software as:
##   Walter Mebane, Jr. and Jasjeet S. Sekhon. 2011.
##   ``Genetic Optimization Using Derivatives: The rgenoud package for R.''
##   Journal of Statistical Software, 42(11): 1-26. 
##

End of F00.Simulation_Libraries.R
End of F02.ComparatorMethod_Functions.R
End of F01.Simulation_Functions.R
fine_gray with uniform censoring
End of CR00.Simulation_Parameters.R
Warning messages:
1: package ‘ggplot2’ was built under R version 4.1.3 
2: package ‘itrSurv’ was built under R version 4.1.3 
3: package ‘dtrSurv’ was built under R version 4.1.3 
4: package ‘cmprsk’ was built under R version 4.1.3 
5: In eval(ei, envir) :
  commandArgs was not provided. Set as c(1, 1, 1, 1, 1, 1, 1, 1).
using train_seed for generating training data
censoring: unif
censor_max is3
`summarise()` has grouped output by 'status'. You can override using the
`.groups` argument.
censoring: unif
censor_max is3
using train_seed+10 to generate obs testing data
censoring: unif
censor_max is3
censoring: unif
censor_max is3
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
Found more than one class "TreeType" in cache; using the first, from namespace 'itrSurv'
Also defined by ‘dtrSurv’
Found more than one class "TreeType" in cache; using the first, from namespace 'itrSurv'
Also defined by ‘dtrSurv’
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.838042503564814 AUS: 0.838042503564814 PropPhase2: 0.206666666666667 Et_cif: 3.48341813628236 AUC: 3.48341813628236evalTime is ignored if critical value is mean
Found more than one class "TreeType" in cache; using the first, from namespace 'itrSurv'
Also defined by ‘dtrSurv’
Stage 1
model Surv(obs_time, D.0) ~ Z1 + Z2
cases in stage: 300
stratified analysis
  treatment level -1
sampleSize: 185
  treatment level 1
sampleSize: 115
Estimated Value: Et: 0.761459699907907
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.672335319886608 AUS: 0.672335319886608 PropPhase2: 0 Et_cif: NaN AUC: NaNusing train_seed for generating training data
censoring: unif
censor_max is3
`summarise()` has grouped output by 'status'. You can override using the
`.groups` argument.
censoring: unif
censor_max is3
using train_seed+10 to generate obs testing data
censoring: unif
censor_max is3
censoring: unif
censor_max is3
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.829642109962703 AUS: 0.829642109962703 PropPhase2: 0.21 Et_cif: 2.49532170844881 AUC: 2.49532170844881evalTime is ignored if critical value is mean
Stage 1
model Surv(obs_time, D.0) ~ Z1 + Z2
cases in stage: 300
stratified analysis
  treatment level -1
sampleSize: 191
  treatment level 1
sampleSize: 109
Estimated Value: Et: 0.716357888112077
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.567936479442124 AUS: 0.567936479442124 PropPhase2: 0 Et_cif: NaN AUC: NaNusing train_seed for generating training data
censoring: unif
censor_max is3
`summarise()` has grouped output by 'status'. You can override using the
`.groups` argument.
censoring: unif
censor_max is3
using train_seed+10 to generate obs testing data
censoring: unif
censor_max is3
censoring: unif
censor_max is3
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.839703458622297 AUS: 0.839703458622297 PropPhase2: 0.206666666666667 Et_cif: 1.87287190547413 AUC: 1.87287190547413evalTime is ignored if critical value is mean
Stage 1
model Surv(obs_time, D.0) ~ Z1 + Z2
cases in stage: 300
stratified analysis
  treatment level -1
sampleSize: 185
  treatment level 1
sampleSize: 115
Estimated Value: Et: 0.786097098037993
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.691540127917074 AUS: 0.691540127917074 PropPhase2: 0 Et_cif: NaN AUC: NaNusing train_seed for generating training data
censoring: unif
censor_max is3
`summarise()` has grouped output by 'status'. You can override using the
`.groups` argument.
censoring: unif
censor_max is3
using train_seed+10 to generate obs testing data
censoring: unif
censor_max is3
censoring: unif
censor_max is3
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.797144929521145 AUS: 0.797144929521145 PropPhase2: 0.18 Et_cif: 2.2250635070988 AUC: 2.2250635070988evalTime is ignored if critical value is mean
Stage 1
model Surv(obs_time, D.0) ~ Z1 + Z2
cases in stage: 300
stratified analysis
  treatment level -1
sampleSize: 173
  treatment level 1
sampleSize: 127
Estimated Value: Et: 0.76151192251488
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.635468953417607 AUS: 0.635468953417607 PropPhase2: 0 Et_cif: NaN AUC: NaNusing train_seed for generating training data
censoring: unif
censor_max is3
`summarise()` has grouped output by 'status'. You can override using the
`.groups` argument.
censoring: unif
censor_max is3
using train_seed+10 to generate obs testing data
censoring: unif
censor_max is3
censoring: unif
censor_max is3
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.782164331526644 AUS: 0.782164331526644 PropPhase2: 0.166666666666667 Et_cif: 2.63104779104255 AUC: 2.63104779104255evalTime is ignored if critical value is mean
Stage 1
model Surv(obs_time, D.0) ~ Z1 + Z2
cases in stage: 300
stratified analysis
  treatment level -1
sampleSize: 198
  treatment level 1
sampleSize: 102
Estimated Value: Et: 0.643604581613707
Phase 1 and Phase 2 datasets are the same.
Dataset sample size: N = 300
Setting nCauses = 2 because there is one priority cause and everything else is lumped into Cause 2*
Step: survival
evalTime is ignored if critical value is mean
Step: CR
evalTime is ignored if critical value is mean
mean ratio tolerance: 0.15
mean diff tolerance: 0
If this is wrong: enter the correct order of 'ratio', 'difference'.
RSF Starting: Phase 1: look at survival
model Surv(obs_time, D.0) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
RSF Starting: Phase 2: look at CR
model_endpoint Surv(obs_time, D.1) ~ Z1 + Z2
we set pr2=pr since we don't use pr in this setting
stratified analysis
  treatment level -1
  treatment level 1
--- itrSurv: Value Functions ---
Estimated Value: Et_surv: 0.553701915768071 AUS: 0.553701915768071 PropPhase2: 0 Et_cif: NaN AUC: NaN
 END OF SIMS 

End of Script: CR00_Simulation_Body.R.
